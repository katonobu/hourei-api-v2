# coding: utf-8

"""
    法令API Version 2

    ## はじめに > * 本APIは<a href=\"https://laws.e-gov.go.jp/apitop/\" target=\"_blank\">法令API（Version1）</a>を改良開発したHTTP APIです。<br> > * 仕様変更情報やサーバーメンテナンス情報につきましては、<a href=\"https://laws.e-gov.go.jp/\" target=\"_blank\">e-Gov法令検索</a>をご覧ください。<br> > * 取得可能な法令データの範囲は、<a href=\"https://laws.e-gov.go.jp/help/#:~:text=%E8%AA%AD%E3%81%BF%E3%81%8F%E3%81%A0%E3%81%95%E3%81%84-,e%2DGov%E6%B3%95%E4%BB%A4%E6%A4%9C%E7%B4%A2%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6,-%E5%B9%B3%E6%88%9029%E5%B9%B4\" target=\"_blank\">e-Gov法令検索について</a>をご覧ください。 > * 法令構造や法令XMLの理解を深めたい方は、<a href=\"https://laws.e-gov.go.jp/docs/\"  target=\"_blank\">法令ドキュメンテーションα版</a>をご覧ください。<br> > * 本ページを視覚的にわかりやすく表現した<a href=\"https://laws.e-gov.go.jp/api/2/redoc/\"  target=\"_blank\">Redoc</a>も提供しておりますのでご覧ください。<br>   ## 注意事項 > <font color=\"red\">&nbsp;&nbsp;本APIが提供している機能のうち、以下は試行版となり仕様変更が発生する場合がありますのでご了承ください。</font><br> > <font color=\"red\">&nbsp;&nbsp;&nbsp;&nbsp;- 法令本文取得APIで返却されるJSON形式のデータ<br></font> > <font color=\"red\">&nbsp;&nbsp;&nbsp;&nbsp;- 法令本文ファイル取得APIで取得できるJSON形式のデータ<br></font> > <font color=\"red\">&nbsp;&nbsp;&nbsp;&nbsp;- キーワード検索APIで名称に`law_num`を含むパラメータ指定時のレスポンスデータ<br></font>   ## XML一括ダウンロードについて > &nbsp;&nbsp;本APIはe-Gov法令検索で公開されているデータを使用します。<br> > &nbsp;&nbsp;法令データをダウンロードする場合は、<a href=\"https://laws.e-gov.go.jp/bulkdownload/\" target=\"_blank\">XML一括ダウンロード</a>にアクセスするか、以下のURLを利用してダウンロードしてください。<br>   >> * ### すべての法令データ >>> <pre><code>     https://laws.e-gov.go.jp/bulkdownload?file_section=1&only_xml_flag=true   </code></pre>   >> * ### 法令分類データ >>> <pre><code>     https://laws.e-gov.go.jp/bulkdownload?file_section=2&category_cd={カテゴリーコード}&only_xml_flag=true   </code></pre>   >>> ※ {カテゴリーコード}はSchemasの<a href=\"#model-category_cd\">`category_cd`</a>を参照してください。<br> >>> ※ `category_cd`の2桁目、3桁目の0は除いてください。（例えば、憲法は`001`ではなく`1`を使用します）   >> * ### 最新の更新法令データ >>> <pre><code>     https://laws.e-gov.go.jp/bulkdownload?file_section=3&update_date={取得する法令データの日付}&only_xml_flag=true   </code></pre>     >>> ※ {取得する法令データの日付}は「YYYYMMDD」（YYYY:年、MM:月、DD:日）形式で指定してください。<br>   >>> 例： 2024年1月1日の場合は`20240101`<br>   >>> （更新法令データの取得範囲は過去３ヶ月です。）   ## 改正区分について > &nbsp;&nbsp;法令APIでは、法令一覧取得API、法令履歴一覧取得API、法令本文取得API、キーワード検索APIのレスポンス`revision_info`内の要素で以下のように判断できます。<br>   >> <table bgcolor=\"white\" border=\"1\">     <tr bgcolor=\"#DDFFFF\">         <th width=\"5%\">改正区分</th>         <th width=\"25%\">改正区分の見分け方</th>     </tr>     <tr>         <td>　新規制定 </td>         <td>　amendment_typeが「1」 かつ missionが「New」のもの</td>     </tr>     <tr>         <td>　一部改正 </td>         <td>　missionが「Partial」のもの</td>     </tr>     <tr>         <td>　被改正法 </td>         <td>　amendment_typeが「3」 かつ missionが「New」のもの</td>     </tr>     <tr>         <td>　廃止 </td>         <td>　amendment_typeが「8」 又は repeal_statusが「Repeal」「Expire」「LossOfEffectiveness」のもの</td>     </tr>   </table>   # noqa: E501

    The version of the OpenAPI document: 2.1.138
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class CategoryCd(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    事項別分類コード:<br>
  * `001` - 憲法
  * `002` - 刑事
  * `003` - 財務通則
  * `004` - 水産業
  * `005` - 観光
  * `006` - 国会
  * `007` - 警察
  * `008` - 国有財産
  * `009` - 鉱業
  * `010` - 郵務
  * `011` - 行政組織
  * `012` - 消防
  * `013` - 国税
  * `014` - 工業
  * `015` - 電気通信
  * `016` - 国家公務員
  * `017` - 国土開発
  * `018` - 事業
  * `019` - 商業
  * `020` - 労働
  * `021` - 行政手続
  * `022` - 土地
  * `023` - 国債
  * `024` - 金融・保険
  * `025` - 環境保全
  * `026` - 統計
  * `027` - 都市計画
  * `028` - 教育
  * `029` - 外国為替・貿易
  * `030` - 厚生
  * `031` - 地方自治
  * `032` - 道路
  * `033` - 文化
  * `034` - 陸運
  * `035` - 社会福祉
  * `036` - 地方財政
  * `037` - 河川
  * `038` - 産業通則
  * `039` - 海運
  * `040` - 社会保険
  * `041` - 司法
  * `042` - 災害対策
  * `043` - 農業
  * `044` - 航空
  * `045` - 防衛
  * `046` - 民事
  * `047` - 建築・住宅
  * `048` - 林業
  * `049` - 貨物運送
  * `050` - 外事
    """


    class MetaOapg:
        enum_value_to_name = {
            "001": "POSITIVE_001",
            "002": "POSITIVE_002",
            "003": "POSITIVE_003",
            "004": "POSITIVE_004",
            "005": "POSITIVE_005",
            "006": "POSITIVE_006",
            "007": "POSITIVE_007",
            "008": "POSITIVE_008",
            "009": "POSITIVE_009",
            "010": "POSITIVE_010",
            "011": "POSITIVE_011",
            "012": "POSITIVE_012",
            "013": "POSITIVE_013",
            "014": "POSITIVE_014",
            "015": "POSITIVE_015",
            "016": "POSITIVE_016",
            "017": "POSITIVE_017",
            "018": "POSITIVE_018",
            "019": "POSITIVE_019",
            "020": "POSITIVE_020",
            "021": "POSITIVE_021",
            "022": "POSITIVE_022",
            "023": "POSITIVE_023",
            "024": "POSITIVE_024",
            "025": "POSITIVE_025",
            "026": "POSITIVE_026",
            "027": "POSITIVE_027",
            "028": "POSITIVE_028",
            "029": "POSITIVE_029",
            "030": "POSITIVE_030",
            "031": "POSITIVE_031",
            "032": "POSITIVE_032",
            "033": "POSITIVE_033",
            "034": "POSITIVE_034",
            "035": "POSITIVE_035",
            "036": "POSITIVE_036",
            "037": "POSITIVE_037",
            "038": "POSITIVE_038",
            "039": "POSITIVE_039",
            "040": "POSITIVE_040",
            "041": "POSITIVE_041",
            "042": "POSITIVE_042",
            "043": "POSITIVE_043",
            "044": "POSITIVE_044",
            "045": "POSITIVE_045",
            "046": "POSITIVE_046",
            "047": "POSITIVE_047",
            "048": "POSITIVE_048",
            "049": "POSITIVE_049",
            "050": "POSITIVE_050",
        }
    
    @schemas.classproperty
    def POSITIVE_001(cls):
        return cls("001")
    
    @schemas.classproperty
    def POSITIVE_002(cls):
        return cls("002")
    
    @schemas.classproperty
    def POSITIVE_003(cls):
        return cls("003")
    
    @schemas.classproperty
    def POSITIVE_004(cls):
        return cls("004")
    
    @schemas.classproperty
    def POSITIVE_005(cls):
        return cls("005")
    
    @schemas.classproperty
    def POSITIVE_006(cls):
        return cls("006")
    
    @schemas.classproperty
    def POSITIVE_007(cls):
        return cls("007")
    
    @schemas.classproperty
    def POSITIVE_008(cls):
        return cls("008")
    
    @schemas.classproperty
    def POSITIVE_009(cls):
        return cls("009")
    
    @schemas.classproperty
    def POSITIVE_010(cls):
        return cls("010")
    
    @schemas.classproperty
    def POSITIVE_011(cls):
        return cls("011")
    
    @schemas.classproperty
    def POSITIVE_012(cls):
        return cls("012")
    
    @schemas.classproperty
    def POSITIVE_013(cls):
        return cls("013")
    
    @schemas.classproperty
    def POSITIVE_014(cls):
        return cls("014")
    
    @schemas.classproperty
    def POSITIVE_015(cls):
        return cls("015")
    
    @schemas.classproperty
    def POSITIVE_016(cls):
        return cls("016")
    
    @schemas.classproperty
    def POSITIVE_017(cls):
        return cls("017")
    
    @schemas.classproperty
    def POSITIVE_018(cls):
        return cls("018")
    
    @schemas.classproperty
    def POSITIVE_019(cls):
        return cls("019")
    
    @schemas.classproperty
    def POSITIVE_020(cls):
        return cls("020")
    
    @schemas.classproperty
    def POSITIVE_021(cls):
        return cls("021")
    
    @schemas.classproperty
    def POSITIVE_022(cls):
        return cls("022")
    
    @schemas.classproperty
    def POSITIVE_023(cls):
        return cls("023")
    
    @schemas.classproperty
    def POSITIVE_024(cls):
        return cls("024")
    
    @schemas.classproperty
    def POSITIVE_025(cls):
        return cls("025")
    
    @schemas.classproperty
    def POSITIVE_026(cls):
        return cls("026")
    
    @schemas.classproperty
    def POSITIVE_027(cls):
        return cls("027")
    
    @schemas.classproperty
    def POSITIVE_028(cls):
        return cls("028")
    
    @schemas.classproperty
    def POSITIVE_029(cls):
        return cls("029")
    
    @schemas.classproperty
    def POSITIVE_030(cls):
        return cls("030")
    
    @schemas.classproperty
    def POSITIVE_031(cls):
        return cls("031")
    
    @schemas.classproperty
    def POSITIVE_032(cls):
        return cls("032")
    
    @schemas.classproperty
    def POSITIVE_033(cls):
        return cls("033")
    
    @schemas.classproperty
    def POSITIVE_034(cls):
        return cls("034")
    
    @schemas.classproperty
    def POSITIVE_035(cls):
        return cls("035")
    
    @schemas.classproperty
    def POSITIVE_036(cls):
        return cls("036")
    
    @schemas.classproperty
    def POSITIVE_037(cls):
        return cls("037")
    
    @schemas.classproperty
    def POSITIVE_038(cls):
        return cls("038")
    
    @schemas.classproperty
    def POSITIVE_039(cls):
        return cls("039")
    
    @schemas.classproperty
    def POSITIVE_040(cls):
        return cls("040")
    
    @schemas.classproperty
    def POSITIVE_041(cls):
        return cls("041")
    
    @schemas.classproperty
    def POSITIVE_042(cls):
        return cls("042")
    
    @schemas.classproperty
    def POSITIVE_043(cls):
        return cls("043")
    
    @schemas.classproperty
    def POSITIVE_044(cls):
        return cls("044")
    
    @schemas.classproperty
    def POSITIVE_045(cls):
        return cls("045")
    
    @schemas.classproperty
    def POSITIVE_046(cls):
        return cls("046")
    
    @schemas.classproperty
    def POSITIVE_047(cls):
        return cls("047")
    
    @schemas.classproperty
    def POSITIVE_048(cls):
        return cls("048")
    
    @schemas.classproperty
    def POSITIVE_049(cls):
        return cls("049")
    
    @schemas.classproperty
    def POSITIVE_050(cls):
        return cls("050")
